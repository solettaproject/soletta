# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

XInt(constant/int:value=20|0|100|1)
YInt(constant/int:value=40|0|100|1)
ZInt(constant/int:value=70|0|100|1)
int_to_vector_3f(converter/int-to-vector-3f:out_range=0|0|200|1)

XInt OUT -> X int_to_vector_3f
YInt OUT -> Y int_to_vector_3f
ZInt OUT -> Z int_to_vector_3f

fourty(constant/int:value=40)
eighty(constant/int:value=80)
one_hundred_and_fourty(constant/int:value=140)

int_to_vector_3f OUT -> IN vector_3f_to_int(converter/vector-3f-to-int)

vector_3f_to_int X -> IN0 eq_fourty(int/equal)
fourty OUT -> IN1 eq_fourty OUT -> RESULT x(test/result)

vector_3f_to_int Y -> IN0 eq_eighty(int/equal)
eighty OUT -> IN1 eq_eighty OUT -> RESULT y(test/result)

vector_3f_to_int Z -> IN0 eq_one_hundred_and_fourty(int/equal)
one_hundred_and_fourty OUT -> IN1 eq_one_hundred_and_fourty OUT -> RESULT z(test/result)



