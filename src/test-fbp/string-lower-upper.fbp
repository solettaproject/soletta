# This file is part of the Solettaâ„¢ Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

test_01(constant/string:value="Hello, world")
test_02(constant/string:value="cccCCC")
test_03(constant/string:value="sssSSS")

test_01 OUT -> IN test_01_lower(string/lowercase)
test_01_lower_expected(constant/string:value="hello, world") OUT -> IN[0] test_01_lower_cmp(string/compare)
test_01_lower OUT -> IN[1] test_01_lower_cmp EQUAL -> RESULT _(test/result)

test_01 OUT -> IN test_01_upper(string/uppercase)
test_01_upper_expected(constant/string:value="HELLO, WORLD") OUT -> IN[0] test_01_upper_cmp(string/compare)
test_01_upper OUT -> IN[1] test_01_upper_cmp EQUAL -> RESULT _(test/result)

test_02 OUT -> IN test_02_lower(string/lowercase)
test_02_lower_expected(constant/string:value="cccccc") OUT -> IN[0] test_02_lower_cmp(string/compare)
test_02_lower OUT -> IN[1] test_02_lower_cmp EQUAL -> RESULT _(test/result)

test_02 OUT -> IN test_02_upper(string/uppercase)
test_02_upper_expected(constant/string:value="CCCCCC") OUT -> IN[0] test_02_upper_cmp(string/compare)
test_02_upper OUT -> IN[1] test_02_upper_cmp EQUAL -> RESULT _(test/result)

test_03 OUT -> IN test_03_lower(string/lowercase)
test_03_lower_expected(constant/string:value="ssssss") OUT -> IN[0] test_03_lower_cmp(string/compare)
test_03_lower OUT -> IN[1] test_03_lower_cmp EQUAL -> RESULT _(test/result)

test_03 OUT -> IN test_03_upper(string/uppercase)
test_03_upper_expected(constant/string:value="SSSSSS") OUT -> IN[0] test_03_upper_cmp(string/compare)
test_03_upper OUT -> IN[1] test_03_upper_cmp EQUAL -> RESULT _(test/result)
