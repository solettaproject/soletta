# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

rgb_to_empty(converter/rgb-to-empty:rgb=80|10|150)
rgb(constant/rgb:value=80|10|150)
RedInt(constant/int:value=80)
GreenInt(constant/int:value=10)
BlueInt(constant/int:value=150)

rgb OUT -> IN rgb_to_empty OUT -> PASS empty_received(test/result)

empty_to_rgb(converter/empty-to-rgb:output_value=80|10|150)
empty(constant/empty)

empty OUT -> IN empty_to_rgb OUT -> IN rgb_to_int(converter/rgb-to-int)

rgb_to_int RED -> IN0 eq_red(int/equal)
RedInt OUT -> IN1 eq_red OUT -> RESULT red(test/result)

rgb_to_int GREEN -> IN0 eq_green(int/equal)
GreenInt OUT -> IN1 eq_green OUT -> RESULT green(test/result)

rgb_to_int BLUE -> IN0 eq_blue(int/equal)
BlueInt OUT -> IN1 eq_blue OUT -> RESULT blue(test/result)
