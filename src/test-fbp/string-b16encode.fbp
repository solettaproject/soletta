# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

hello_world(constant/string:value="Hello World")
hello_world_as_b16_string(constant/string:value="48656c6c6f20576f726c64")

# blob will contain trailing null byte (\0), thus changes the encoded string
hello_world_as_b16_blob(constant/string:value="48656c6c6f20576f726c6400")

hello_world OUT -> STRING b16enc_string(string/b16encode)

b16enc_string OUT -> IN[0] hello_world_as_b16_string_cmp(string/compare)
hello_world_as_b16_string OUT -> IN[1] hello_world_as_b16_string_cmp
hello_world_as_b16_string_cmp EQUAL -> RESULT string_encoded(test/result)

hello_world OUT -> IN _(converter/string-to-blob) OUT -> BLOB b16enc_blob(string/b16encode)

b16enc_blob OUT -> IN[0] hello_world_as_b16_blob_cmp(string/compare)
hello_world_as_b16_blob OUT -> IN[1] hello_world_as_b16_blob_cmp
hello_world_as_b16_blob_cmp EQUAL -> RESULT blob_encoded(test/result)


