OPTION=Bool.value:bool-ahoi
OPTION=Int.value:MyInt
OPTION=Float.value:Float
OPTION=String.value:AString
OPTION=Byte.value:Byte
OPTION=DirectionVector.value:Direction

Int(constant/int:value=0) OUT -> IN[0] IntEqual(int/equal) OUT -> RESULT TestInt(test/result)
_(constant/int:value=20) OUT -> IN[1] IntEqual

Float(constant/float:value=0.0) OUT -> IN[0] FloatEqual(float/equal) OUT -> RESULT TestFloat(test/result)
_(constant/float:value=2.4) OUT -> IN[1] FloatEqual

String(constant/string:value=null) OUT -> IN[0] StrEqual(string/compare) EQUAL -> RESULT TestString(test/result)
_(constant/string:value="Soletta is awesome") OUT -> IN[1] StrEqual

Byte(constant/byte:value=0x00) OUT -> IN[0] ByteEqual(byte/equal) OUT -> RESULT TestByte(test/result)
_(constant/byte:value=0x02) OUT -> IN[1] ByteEqual

DirectionVector(constant/direction-vector:value=0|199|22) OUT -> IN ConverterDirection(converter/direction-vector-to-int)

ConverterDirection X -> IN[0] DirXEqual(int/equal) OUT -> RESULT TestDirectionVectorX(test/result)
_(constant/int:value=1) OUT -> IN[1] DirXEqual

ConverterDirection Y -> IN[0] DirYEqual(int/equal) OUT -> RESULT TestDirectionVectorY(test/result)
_(constant/int:value=2) OUT -> IN[1] DirYEqual

ConverterDirection Z -> IN[0] DirZEqual(int/equal) OUT -> RESULT TestDirectionVectorZ(test/result)
_(constant/int:value=3) OUT -> IN[1] DirZEqual

Bool(constant/boolean:value=false) OUT -> RESULT TestBool(test/result)
