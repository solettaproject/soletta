# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

constant_10(constant/int:value=10)
constant_30(constant/int:value=30)
constant_50(constant/int:value=50)

result_10(constant/int:value=0)
result_30(constant/int:value=50)
result_50(constant/int:value=100)

equal_10(int/equal)
equal_30(int/equal)
equal_50(int/equal)

map_test_10(int/map:use_input_range=false,input_range=min:10|max:50,output_range=min:0|max:100|step:1)
map_test_30(int/map:use_input_range=false,input_range=min:10|max:50,output_range=min:0|max:100|step:1)
map_test_50(int/map:use_input_range=false,input_range=min:10|max:50,output_range=min:0|max:100|step:1)

constant_10 OUT -> IN map_test_10 OUT -> IN[0] equal_10 OUT -> RESULT test_10(test/result)
constant_30 OUT -> IN map_test_30 OUT -> IN[0] equal_30 OUT -> RESULT test_30(test/result)
constant_50 OUT -> IN map_test_50 OUT -> IN[0] equal_50 OUT -> RESULT test_50(test/result)

result_10 OUT -> IN[1] equal_10
result_30 OUT -> IN[1] equal_30
result_50 OUT -> IN[1] equal_50



