# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

XFloat(constant/float:value=20|0|100|1)
YFloat(constant/float:value=40|0|100|1)
ZFloat(constant/float:value=70|0|100|1)
float_to_direction_vector(converter/float-to-direction-vector:out_range=0|0|200|1)

XFloat OUT -> X float_to_direction_vector
YFloat OUT -> Y float_to_direction_vector
ZFloat OUT -> Z float_to_direction_vector

float_x(constant/float:value=40)
float_y(constant/float:value=80)
float_z(constant/float:value=140)

float_to_direction_vector OUT -> IN direction_vector_to_float(converter/direction-vector-to-float)

direction_vector_to_float X -> IN[0] eq_twenty(float/equal)
float_x OUT -> IN[1] eq_twenty OUT -> RESULT x(test/result)

direction_vector_to_float Y -> IN[0] eq_eighty(float/equal)
float_y OUT -> IN[1] eq_eighty OUT -> RESULT y(test/result)

direction_vector_to_float Z -> IN[0] eq_thirty_five(float/equal)
float_z OUT -> IN[1] eq_thirty_five OUT -> RESULT z(test/result)
