# This file is part of the Solettaâ„¢ Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

json_object_str(constant/string:value="{\"int_val\": 123, \"float_val\": 1.23 \"string_val\" : \"hello\" \"false_val\": false, \"true_val\": true, \"null_val\": null, \"array_val\":[1,2,3], \"object_val\": {\"inner_int\": 456}}")
json_object(converter/string-to-json-object)

int_validator(test/int-validator:sequence="123 1")
float_validator(test/float-validator:sequence="123 1.23")
string_validator(test/string-validator:sequence="hello")
bool_validator(test/boolean-validator:sequence="FT")
null_validator(converter/empty-to-boolean:output_value=true)
object_validator_int(test/int-validator:sequence="456")
array_validator(test/blob-validator:expected="[1,2,3]")
object_validator(test/blob-validator:expected="{\"inner_int\": 456}")

get_key_int_val(json/object-get-key:key="int_val")
get_key_float_val(json/object-get-key:key="float_val")
get_key_string_val(json/object-get-key:key="string_val")
get_key_false_val(json/object-get-key:key="false_val")
get_key_true_val(json/object-get-key:key="true_val")
get_key_null_val(json/object-get-key:key="null_val")
get_key_object_val(json/object-get-key:key="object_val")
get_key_array_val(json/object-get-key)

# Test node json/object-get-key
json_object_str OUT -> IN json_object
json_object OUT -> IN get_key_int_val
json_object OUT -> IN get_key_float_val
json_object OUT -> IN get_key_string_val
json_object OUT -> IN get_key_false_val
json_object OUT -> IN get_key_true_val
json_object OUT -> IN get_key_null_val
json_object OUT -> IN get_key_object_val
json_object OUT -> IN get_key_array_val

get_key_int_val INT -> IN int_validator
get_key_int_val FLOAT -> IN float_validator
get_key_float_val INT -> IN int_validator
get_key_float_val FLOAT -> IN float_validator
get_key_string_val STRING -> IN string_validator
get_key_false_val BOOLEAN -> IN bool_validator
get_key_true_val BOOLEAN -> IN bool_validator
get_key_null_val NULL -> IN null_validator
get_key_object_val OBJECT -> IN _(json/object-get-key:key="inner_int") INT -> IN object_validator_int
get_key_object_val OBJECT -> IN _(converter/json-object-to-blob) OUT -> IN object_validator
get_key_array_val ARRAY -> IN _(converter/json-array-to-blob) OUT -> IN array_validator
_(constant/string:value="array_val") OUT -> KEY get_key_array_val

int_validator OUT -> RESULT int_result(test/result)
float_validator OUT -> RESULT float_result(test/result)
string_validator OUT -> RESULT string_result(test/result)
bool_validator OUT -> RESULT bool_result(test/result)
null_validator OUT -> RESULT null_result(test/result)
object_validator_int OUT -> RESULT object_int_result(test/result)
array_validator OUT -> RESULT array_result(test/result)
object_validator OUT -> RESULT object_result(test/result)

# Test node json/object-length
json_object OUT -> IN _(json/object-length) OUT -> IN object_length_validator(test/int-validator:sequence="8")
object_length_validator OUT -> RESULT test_object_length(test/result)

# Test node json/object-get-all-keys
empty_str(constant/string:value="{}")
empty_json_object(converter/string-to-json-object)
key_validator(test/string-validator:sequence="int_val|float_val|string_val|false_val|true_val|null_val|array_val|object_val")

json_object OUT -> IN get_all_keys(json/object-get-all-keys)
get_all_keys EMPTY -> IN _(boolean/not) OUT -> RESULT get_all_keys_empty_validator(test/result)
get_all_keys OUT -> IN key_validator OUT -> RESULT get_all_keys_validator(test/result)

empty_str OUT -> IN empty_json_object
empty_json_object OUT -> IN get_all_keys2(json/object-get-all-keys)
get_all_keys2 EMPTY -> RESULT get_all_keys_empty_validator2(test/result)
