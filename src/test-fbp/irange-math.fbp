# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

negative_val(constant/int:value=-365)
positive_val(constant/int:value=183784)
absolute_val(constant/int:value=365)

negative_val OUT -> IN0 min(int/min)
positive_val OUT -> IN1 min
min OUT -> IN0 cmp_min(int/equal)
negative_val OUT -> IN1 cmp_min
cmp_min OUT -> RESULT min_result(test/result)

negative_val OUT -> IN0 max(int/max)
positive_val OUT -> IN1 max
max OUT -> IN0 cmp_max(int/equal)
positive_val OUT -> IN1 cmp_max
cmp_max OUT -> RESULT max_result(test/result)

negative_val OUT -> IN abs(int/abs) OUT -> IN0 cmp_abs(int/equal)
absolute_val OUT -> IN1 cmp_abs
cmp_abs OUT -> RESULT abs_result(test/result)

constrain_int(constant/int:value=50) OUT -> IN  constrain(int/constrain) OUT -> IN0 constrain_equal(int/equal)
constrain_int OUT -> IN1 constrain_equal OUT -> RESULT constrain_test(test/result)
