# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

constant1(constant/int:value=365)
constant2(constant/int:value=2015)
constant3(constant/int:value=-1024)
constant4(constant/int:value=1024)

constant1 OUT -> IN[0] max(int/max)
constant2 OUT -> IN[1] max
max OUT -> IN[0] equal_max(int/equal)
constant2 OUT -> IN[1] equal_max
equal_max OUT -> RESULT r_max(test/result)

constant1 OUT -> IN[0] min(int/min)
constant2 OUT -> IN[1] min
min OUT -> IN[0] equal_min(int/equal)
constant1 OUT -> IN[1] equal_min
equal_min OUT -> RESULT r_min(test/result)

constant3 OUT -> IN abs_neg(int/abs)
abs_neg OUT -> IN[0] equal_abs_neg(int/equal)
constant4 OUT -> IN[1] equal_abs_neg
equal_abs_neg OUT -> RESULT r_abs_neg(test/result)

constant1 OUT -> IN abs_pos(int/abs)
abs_pos OUT -> IN[0] equal_abs_pos(int/equal)
constant1 OUT -> IN[1] equal_abs_pos
equal_abs_pos OUT -> RESULT r_abs_pos(test/result)

constrain(int/constrain:range=min:20|max:60|step:1,use_input_range=false)
lower_const(constant/int:value=10) OUT -> IN constrain
constrain OUT -> IN[0] less_equal(int/less-or-equal)
upper(constant/int:value=60) OUT -> IN[1] less_equal OUT -> RESULT test_constrain_upper_boundary(test/result)
constrain OUT -> IN[0] greater_equal(int/greater-or-equal)
lower(constant/int:value=20) OUT -> IN[1] greater_equal OUT -> RESULT test_constrain_lower_boundary(test/result)

constrain2(int/constrain:range=min:20|max:60|step:1,use_input_range=false)
right_const(constant/int:value=30) OUT -> IN constrain2
constrain2 OUT -> IN[0] less_equal2(int/less-or-equal)
upper2(constant/int:value=60) OUT -> IN[1] less_equal2 OUT -> RESULT test_constrain_upper_boundary2(test/result)
constrain2 OUT -> IN[0] greater_equal2(int/greater-or-equal)
lower2(constant/int:value=20) OUT -> IN[1] greater_equal2 OUT -> RESULT test_constrain_lower_boundary2(test/result)

constrain3(int/constrain:range=min:20|max:60|step:1,use_input_range=false)
upper_const(constant/int:value=70) OUT -> IN constrain3
constrain3 OUT -> IN[0] less_equal3(int/less-or-equal)
upper3(constant/int:value=60) OUT -> IN[1] less_equal3 OUT -> RESULT test_constrain_upper_boundary3(test/result)
constrain3 OUT -> IN[0] greater_equal3(int/greater-or-equal)
lower3(constant/int:value=20) OUT -> IN[1] greater_equal3 OUT -> RESULT test_constrain_lower_boundary3(test/result)
