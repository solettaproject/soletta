# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

constant1(constant/int:value=365)
constant2(constant/int:value=2015)
constant3(constant/int:value=-1024)
constant4(constant/int:value=1024)

constant1 OUT -> IN0 max(int/max)
constant2 OUT -> IN1 max
max OUT -> IN0 equal_max(int/equal)
constant2 OUT -> IN1 equal_max
equal_max OUT -> RESULT r_max(test/result)

constant1 OUT -> IN0 min(int/min)
constant2 OUT -> IN1 min
min OUT -> IN0 equal_min(int/equal)
constant1 OUT -> IN1 equal_min
equal_min OUT -> RESULT r_min(test/result)

constant3 OUT -> IN abs_neg(int/abs)
abs_neg OUT -> IN0 equal_abs_neg(int/equal)
constant4 OUT -> IN1 equal_abs_neg
equal_abs_neg OUT -> RESULT r_abs_neg(test/result)

constant1 OUT -> IN abs_pos(int/abs)
abs_pos OUT -> IN0 equal_abs_pos(int/equal)
constant1 OUT -> IN1 equal_abs_pos
equal_abs_pos OUT -> RESULT r_abs_pos(test/result)
