# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Color(color/luminance-rgb:color=255|100|0|255|255|255)
Luminance(constant/int:value=50,value_spec=0|100|1) OUT -> IN Color

RedByte(constant/byte:value=255) OUT -> RED ColorByte(converter/byte-to-rgb)
GreenByte(constant/byte:value=100) OUT -> GREEN ColorByte
BlueByte(constant/byte:value=0) OUT -> BLUE ColorByte
ColorByte OUT -> IN Bytes(converter/rgb-to-int)

Bytes RED -> IN[0] cmpRedBytes(int/equal) OUT -> RESULT test_compare_red_byte(test/result)
Bytes BLUE -> IN[0] cmpBlueBytes(int/equal) OUT -> RESULT test_compare_blue_byte(test/result)
Bytes GREEN -> IN[0] cmpGreenBytes(int/equal) OUT -> RESULT test_compare_green_byte(test/result)

_(constant/int:value=255) OUT -> IN[1] cmpRedBytes
_(constant/int:value=0) OUT -> IN[1] cmpBlueBytes
_(constant/int:value=100) OUT -> IN[1] cmpGreenBytes

RedFloat(constant/float:value=1,value_spec=0|1|1) OUT -> RED ColorFloat(converter/float-to-rgb:blue_max=64)
GreenFloat(constant/float:value=0.5,value_spec=0|1|1) OUT -> GREEN ColorFloat
BlueFloat(constant/float:value=100,value_spec=0|100|1) OUT -> BLUE ColorFloat
ColorFloat OUT -> IN Floats(converter/rgb-to-int)

Floats RED -> IN[0] cmpRedFloats(int/equal) OUT -> RESULT test_compare_red_float(test/result)
Floats BLUE -> IN[0] cmpBlueFloats(int/equal) OUT -> RESULT test_compare_blue_float(test/result)
Floats GREEN -> IN[0] cmpGreenFloats(int/equal) OUT -> RESULT test_compare_green_float(test/result)

_(constant/int:value=255) OUT -> IN[1] cmpRedFloats
_(constant/int:value=64) OUT -> IN[1] cmpBlueFloats
_(constant/int:value=127) OUT -> IN[1] cmpGreenFloats

RedInt(constant/int:value=20,value_spec=0|100|1) OUT -> RED ColorInt(converter/int-to-rgb:red_max=32,green_max=64,blue_max=32)
GreenInt(constant/int:value=50,value_spec=0|100|1) OUT -> GREEN ColorInt
BlueInt(constant/int:value=100,value_spec=0|100|1) OUT -> BLUE ColorInt
ColorInt OUT -> IN Ints(converter/rgb-to-int)

Ints RED -> IN[0] cmpRedInts(int/equal) OUT -> RESULT test_compare_red_int(test/result)
Ints BLUE -> IN[0] cmpBlueInts(int/equal) OUT -> RESULT test_compare_blue_int(test/result)
Ints GREEN -> IN[0] cmpGreenInts(int/equal) OUT -> RESULT test_compare_green_int(test/result)

_(constant/int:value=6) OUT -> IN[1] cmpRedInts
_(constant/int:value=32) OUT -> IN[1] cmpBlueInts
_(constant/int:value=32) OUT -> IN[1] cmpGreenInts

invalid_min_max(constant/int:value_spec=min:10|max:5,value=10) OUT -> IN _(color/luminance-rgb:color=255|100|0|255|255|255) ERROR -> IN _(converter/empty-to-boolean) OUT -> PASS invalid_test_result(test/result)

invalid_value(constant/int:value_spec=min:5|max:10,value=11) OUT -> IN _(color/luminance-rgb:color=255|100|0|255|255|255) ERROR -> IN _(converter/empty-to-boolean) OUT -> PASS invalid_test_result2(test/result)

