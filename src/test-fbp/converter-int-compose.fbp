# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

byte_0(constant/byte:value=134)
byte_1(constant/byte:value=100)
byte_2(constant/byte:value=244)
byte_3(constant/byte:value=18)
int_compose(converter/int-compose)

byte_0 OUT -> IN[0] int_compose
byte_1 OUT -> IN[1] int_compose
byte_2 OUT -> IN[2] int_compose
byte_3 OUT -> IN[3] int_compose

int_decompose(converter/int-decompose)
int_compose OUT -> IN int_decompose
int_decompose OUT[0] -> IN _(converter/byte-to-int) OUT -> IN0 cmp_least_significant_byte(int/equal)
byte_0 OUT -> IN _(converter/byte-to-int) OUT -> IN1 cmp_least_significant_byte OUT -> RESULT r_byte_0(test/result)

int_decompose OUT[1] -> IN _(converter/byte-to-int) OUT -> IN0 cmp_second_byte(int/equal)
byte_1 OUT -> IN _(converter/byte-to-int) OUT -> IN1 cmp_second_byte OUT -> RESULT r_byte_1(test/result)

int_decompose OUT[2] -> IN _(converter/byte-to-int) OUT -> IN0 cmp_third_byte(int/equal)
byte_2 OUT -> IN _(converter/byte-to-int) OUT -> IN1 cmp_third_byte OUT -> RESULT r_byte_2(test/result)

int_decompose OUT[3] -> IN _(converter/byte-to-int) OUT -> IN0 cmp_fourth_byte(int/equal)
byte_3 OUT -> IN _(converter/byte-to-int) OUT -> IN1 cmp_fourth_byte OUT -> RESULT r_byte_3(test/result)
