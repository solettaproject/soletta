# This file is part of the Solettaâ„¢ Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This test will write to following file:
# memmap-test.bin
# This test also depends on sol-flow.json, which contains its memory map.
# memmap-test.bin need to exist and have previously written by
# persistence-memmap-1.fbp
# Note: memory mapped storage does not support default values. They are
# meant to be sent when there's no previous saved value. However, memory mapped
# storage does not support 'not previously saved value', as we only get a bunch
# of zeros and have no way to know if they mean something or not.

## TEST-SKIP-COMPILE This test uses some files, but path resolution is not decided yet
## TEST-DEPENDS-ON persistence-memmap-1.fbp

validator_int(test/int-validator:sequence="-12")
validator_irange(test/int-validator:sequence="-13")
validator_byte(test/int-validator:sequence="73")
validator_boolean(test/boolean-validator:sequence="T")
validator_string(test/string-validator:sequence="string")
validator_double(test/float-validator:sequence="2.568")
validator_float_map(test/float-validator:sequence="50.0")
validator_float_val_only_map(test/float-validator:sequence="0.0")
validator_drange(test/float-validator:sequence="5.5")
validator_drange_map(test/float-validator:sequence="56.0")
validator_int_map(test/int-validator:sequence="49")
validator_int_val_only_map(test/int-validator:sequence="100")
validator_irange_map(test/int-validator:sequence="37")
validator_rgb(test/int-validator:sequence="255 123 55")
validator_dir_vector(test/float-validator:sequence="23.4 100.2 -23.2")

int_map(int/map:output_range=min:0|max:100|step:1)
int_only_val_map(int/map:output_range=min:0|max:100|step:1)
irange_map(int/map:output_range=min:0|max:100|step:1)

double_map(float/map:output_range=min:0|max:100|step:1)
double_only_val_map(float/map:output_range=min:0|max:100|step:1)
drange_map(float/map:output_range=min:0|max:100|step:1)

persist_dir_vector(persistence/direction-vector:storage="memmap", name="dir_vector") OUT -> IN dir_vector_to_float(converter/direction-vector-to-float) X -> IN validator_dir_vector OUT -> RESULT _(test/result)
dir_vector_to_float Y -> IN validator_dir_vector
dir_vector_to_float Z -> IN validator_dir_vector

persist_rgb(persistence/rgb:storage="memmap", name="rgb") OUT -> IN rgb_to_int(converter/rgb-to-int) RED -> IN validator_rgb OUT -> RESULT _(test/result)
rgb_to_int GREEN -> IN validator_rgb
rgb_to_int BLUE -> IN validator_rgb
persist_int(persistence/int:storage="memmap",name="int")
persist_int_only_val(persistence/int:storage="memmap",name="int_only_val",store_only_val=true,default_value=30,default_value_spec=-12|30|1)
persist_irange(persistence/int:storage="memmap",name="irange")
persist_byte(persistence/byte:storage="memmap",name="byte")
persist_boolean(persistence/boolean:storage="memmap",name="boolean")
persist_string(persistence/string:storage="memmap",name="string")
persist_double(persistence/float:storage="memmap",name="double")
persist_double_only_val(persistence/float:storage="memmap",name="double_only_val",store_only_val=true,default_value=1023.22,default_value_spec=1|1024|0.5)
persist_drange(persistence/float:storage="memmap",name="drange")

persist_int OUT -> IN validator_int OUT -> RESULT _(test/result)
persist_irange OUT -> IN validator_irange OUT -> RESULT _(test/result)
persist_byte OUT -> IN _(converter/byte-to-int) OUT -> IN validator_byte OUT -> RESULT _(test/result)
persist_boolean OUT -> IN validator_boolean OUT -> RESULT _(test/result)
persist_string OUT -> IN validator_string OUT -> RESULT _(test/result)
persist_double OUT -> IN validator_double OUT -> RESULT _(test/result)
persist_drange OUT -> IN validator_drange OUT -> RESULT _(test/result)

persist_int OUT -> IN int_map OUT -> IN validator_int_map OUT -> RESULT _(test/result)
persist_irange OUT -> IN irange_map OUT -> IN validator_irange_map OUT -> RESULT _(test/result)
persist_double OUT -> IN double_map OUT -> IN validator_float_map OUT -> RESULT _(test/result)
persist_drange OUT -> IN drange_map OUT -> IN validator_drange_map OUT -> RESULT _(test/result)

persist_int_only_val OUT -> IN int_only_val_map OUT -> IN validator_int_val_only_map OUT -> RESULT _(test/result)
persist_double_only_val OUT -> IN double_only_val_map OUT -> IN validator_float_val_only_map OUT -> RESULT _(test/result)
