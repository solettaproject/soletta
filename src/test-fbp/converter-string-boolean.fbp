# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

custom_true_str(constant/string:value="CustomTrue")
custom_false_str(constant/string:value="CustomFalse")

true(constant/boolean:value=true)
true_str(constant/string:value=True)

true OUT -> IN true_to_str(converter/boolean-to-string) OUT -> IN[0] true_cmp(string/compare)
true_str OUT -> IN[1] true_cmp EQUAL -> RESULT true_converts_to_string(test/result)

true_to_str OUT -> IN str_to_true(converter/string-to-boolean)
str_to_true OUT -> RESULT string_converts_to_true(test/result)


false(constant/boolean:value=false)
false_str(constant/string:value=False)

false OUT -> IN false_to_str(converter/boolean-to-string) OUT -> IN[0] false_cmp(string/compare)
false_str OUT -> IN[1] false_cmp EQUAL -> RESULT false_converts_to_string(test/result)

false_to_str OUT -> IN str_to_false(converter/string-to-boolean)
str_to_false OUT -> IN not(boolean/not) OUT -> RESULT string_converts_to_false(test/result)


true OUT -> IN true_to_custom_str(converter/boolean-to-string:true_value="CustomTrue") OUT -> IN[0] custom_true_cmp(string/compare)
custom_true_str OUT -> IN[1] custom_true_cmp EQUAL -> RESULT custom_true_converts_to_string(test/result)

custom_false_str OUT -> FALSE_VALUE true_to_custom_port_str
custom_true_str OUT -> TRUE_VALUE true_to_custom_port_str(converter/boolean-to-string)
true OUT -> IN true_to_custom_port_str OUT -> IN[0] custom_true_port_cmp(string/compare)
custom_true_str OUT -> IN[1] custom_true_port_cmp EQUAL -> RESULT custom_true_port_converts_to_string(test/result)
