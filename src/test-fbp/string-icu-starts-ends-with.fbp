# This file is part of the Soletta™ Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

sample_01(constant/string:value="la★al")
sample_01 OUT -> IN prefix_01(string/starts-with:prefix="la★")
prefix_01 OUT -> RESULT test_01(test/result)

sample_02(constant/string:value="la★al")
sample_02 OUT -> IN prefix_02(string/starts-with:prefix="a★a",start=1)
prefix_02 OUT -> RESULT test_02(test/result)

sample_03(constant/string:value="la★al")
sample_03 OUT -> IN prefix_03(string/starts-with:prefix="a★a",start=1,end=666)
prefix_03 OUT -> RESULT test_03(test/result)

sample_04(constant/string:value="la★al")
sample_04 OUT -> IN prefix_04(string/starts-with:prefix="")
prefix_04 OUT -> RESULT test_04(test/result)

sample_05(constant/string:value="la★al")
sample_05 OUT -> IN prefix_05(string/starts-with:prefix="whatever")
prefix_05 OUT -> IN _(boolean/not) OUT -> RESULT test_05(test/result)

sample_06(constant/string:value="la★al")
sample_06 OUT -> IN suffix_06(string/ends-with:suffix="★al")
suffix_06 OUT -> RESULT test_06(test/result)

sample_07(constant/string:value="la★al")
sample_07 OUT -> IN suffix_07(string/ends-with:suffix="a★a",start=1,end=4)
suffix_07 OUT -> RESULT test_07(test/result)

sample_08(constant/string:value="la★al")
sample_08 OUT -> IN suffix_08(string/ends-with:suffix="★al",start=1,end=666)
suffix_08 OUT -> RESULT test_08(test/result)

sample_09(constant/string:value="la★al")
sample_09 OUT -> IN suffix_09(string/ends-with:suffix="")
suffix_09 OUT -> RESULT test_09(test/result)

sample_10(constant/string:value="la★al")
sample_10 OUT -> IN suffix_10(string/ends-with:suffix="whatever")
suffix_10 OUT -> IN _(boolean/not) OUT -> RESULT test_10(test/result)
