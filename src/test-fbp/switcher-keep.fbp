# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

ind(test/int-generator:sequence="1 0 3 200", interval=20)
p0(test/int-generator:sequence="3 5", interval=50)
val(test/int-validator:sequence="1 0 1 3 200")
c1(constant/int:value=1)
c0(constant/int:value=0)
c200(constant/int:value=200)

switcher(switcher/int:keep_state=true)

ind OUT -> IN_PORT switcher
c1 OUT -> IN[0] switcher
p0 OUT -> IN[0] switcher
c0 OUT -> IN[1] switcher
c200 OUT -> IN[3] switcher

switcher OUT[0] -> IN val OUT -> RESULT switcher_keep(test/result)

fp0(test/float-generator:sequence="3 5", interval=50)
fval(test/float-validator:sequence="1.5 0 1.5 3 -200.9")
fc1(constant/float:value=1.5)
fc0(constant/float:value=0)
fc200(constant/float:value=-200.9)

fswitcher(switcher/float:keep_state=true)

ind OUT -> IN_PORT fswitcher
fc1 OUT -> IN[0] fswitcher
fp0 OUT -> IN[0] fswitcher
fc0 OUT -> IN[1] fswitcher
fc200 OUT -> IN[3] fswitcher

fswitcher OUT[0] -> IN fval OUT -> RESULT float_switcher_keep(test/result)

bp0(test/boolean-generator:sequence="FT", interval=50)
bval(test/boolean-validator:sequence="TFTFF")
bc1(constant/boolean:value=true)
bc0(constant/boolean:value=false)
bc200(constant/boolean:value=false)

bswitcher(switcher/boolean:keep_state=true)

ind OUT -> IN_PORT bswitcher
bc1 OUT -> IN[0] bswitcher
bp0 OUT -> IN[0] bswitcher
bc0 OUT -> IN[1] bswitcher
bc200 OUT -> IN[3] bswitcher

bswitcher OUT[0] -> IN bval OUT -> RESULT boolean_switcher_keep(test/result)

byp0(test/byte-generator:sequence="3 5", interval=50)
byval(test/byte-validator:sequence="1 0 1 3 200")
byc1(constant/byte:value=1)
byc0(constant/byte:value=0)
byc200(constant/byte:value=200)

byswitcher(switcher/byte:keep_state=true)

ind OUT -> IN_PORT byswitcher
byc1 OUT -> IN[0] byswitcher
byp0 OUT -> IN[0] byswitcher
byc0 OUT -> IN[1] byswitcher
byc200 OUT -> IN[3] byswitcher

byswitcher OUT[0] -> IN byval OUT -> RESULT byte_switcher_keep(test/result)

str1(constant/string:value="Hello")
str2(constant/string:value="World")
ind2(test/int-generator:sequence="1 0", interval=20)
sval(test/string-validator:sequence="Hello|World|Hello")

strswitcher(switcher/string:keep_state=true)

ind2 OUT -> IN_PORT strswitcher
str1 OUT -> IN[0] strswitcher
str2 OUT -> IN[1] strswitcher

strswitcher OUT[0] -> IN sval OUT -> RESULT string_switcher_keep(test/result)
