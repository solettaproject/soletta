# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

sample_01(constant/string:value="la*al")
sample_01 OUT -> IN prefix_01(string/starts-with:prefix="la*")
prefix_01 OUT -> RESULT test_01(test/result)

sample_02(constant/string:value="la*al")
sample_02 OUT -> IN prefix_02(string/starts-with:prefix="a*a",start=1)
prefix_02 OUT -> RESULT test_02(test/result)

sample_03(constant/string:value="la*al")
sample_03 OUT -> IN prefix_03(string/starts-with:prefix="a*a",start=1,end=666)
prefix_03 OUT -> RESULT test_03(test/result)

sample_04(constant/string:value="la*al")
sample_04 OUT -> IN prefix_04(string/starts-with:prefix="")
prefix_04 OUT -> RESULT test_04(test/result)

sample_05(constant/string:value="la*al")
sample_05 OUT -> IN prefix_05(string/starts-with:prefix="whatever")
prefix_05 OUT -> IN _(boolean/not) OUT -> RESULT test_05(test/result)

sample_06(constant/string:value="la*al")
sample_06 OUT -> IN suffix_06(string/ends-with:suffix="*al")
suffix_06 OUT -> RESULT test_06(test/result)

sample_07(constant/string:value="la*al")
sample_07 OUT -> IN suffix_07(string/ends-with:suffix="a*a",start=1,end=4)
suffix_07 OUT -> RESULT test_07(test/result)

sample_08(constant/string:value="la*al")
sample_08 OUT -> IN suffix_08(string/ends-with:suffix="*al",start=1,end=666)
suffix_08 OUT -> RESULT test_08(test/result)

sample_09(constant/string:value="la*al")
sample_09 OUT -> IN suffix_09(string/ends-with:suffix="")
suffix_09 OUT -> RESULT test_09(test/result)

sample_10(constant/string:value="la*al")
sample_10 OUT -> IN suffix_10(string/ends-with:suffix="whatever")
suffix_10 OUT -> IN _(boolean/not) OUT -> RESULT test_10(test/result)
