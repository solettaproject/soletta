# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

_(constant/float:value=3) OUT -> IN _(converter/float-to-string:format_spec="{4:f}") ERROR -> IN _(converter/error) MESSAGE -> IN[0] test_cmp_01(string/compare)
_(constant/string:value="Field index 4 does not exist for float type") OUT -> IN[1] test_cmp_01 EQUAL -> RESULT _(test/result)

_(constant/float:value=3) OUT -> IN _(converter/float-to-string:format_spec="{4:f") ERROR -> IN _(converter/error) MESSAGE -> IN[0] test_cmp_02(string/compare)
_(constant/string:value="unmatched '{' in format spec") OUT -> IN[1] test_cmp_02 EQUAL -> RESULT _(test/result)

_(constant/float:value=3) OUT -> IN _(converter/float-to-string:format_spec="{:Q}") ERROR -> IN _(converter/error) MESSAGE -> IN[0] test_cmp_03(string/compare)
_(constant/string:value="Unknown format code 'Q' for object of type 'float'") OUT -> IN[1] test_cmp_03 EQUAL -> RESULT _(test/result)

_(constant/float:value=3) OUT -> IN _(converter/float-to-string:format_spec="{vala:f}") ERROR -> IN _(converter/error) MESSAGE -> IN[0] test_cmp_04(string/compare)
_(constant/string:value="Field vala does not exist for float type") OUT -> IN[1] test_cmp_04 EQUAL -> RESULT _(test/result)

_(constant/float:value=3) OUT -> IN _(converter/float-to-string:format_spec="{:d}") ERROR -> IN _(converter/error) MESSAGE -> IN[0] test_cmp_05(string/compare)
_(constant/string:value="Unknown format code 'd' for object of type 'float'") OUT -> IN[1] test_cmp_05 EQUAL -> RESULT _(test/result)

## TEST-OUTPUT-REGEX
# WRN\:.*
