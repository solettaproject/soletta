config NETWORK
	bool "Network"
	default y
	help
            Network library provides a way to handle network link interfaces,
            making it possible to observe events, to inquire available links
            and to set their states.

config DTLS
	bool "Enable DTLS (Datagram Transport Layer Security) support"
	default n
	depends on HAVE_TINYDTLS_SRC
	help
	    This enables support for DTLS (a derivation from the SSL protocol)
	    support in the socket abstraction layer.

	    If unsure, say N.

config COAP
	bool "CoAP"
	default y
	depends on NETWORK && FEATURE_COAP
	help
            The Constrained Application Protocol (CoAP) is a
            specialized web transfer protocol for use with constrained
            nodes and constrained (e.g., low-power, lossy) networks.
            The nodes often have 8-bit microcontrollers with small
            amounts of ROM and RAM, while constrained networks such as
            IPv6 over Low-Power Wireless Personal Area Networks
            (6LoWPANs) often have high packet error rates and a
            typical throughput of 10s of kbit/s.  The protocol is
            designed for machine- to-machine (M2M) applications such
            as smart energy and building automation.

            CoAP provides a request/response interaction model between
            application endpoints, supports built-in discovery of
            services and resources, and includes key concepts of the
            Web such as URIs and Internet media types.  CoAP is
            designed to easily interface with HTTP for integration
            with the Web while meeting specialized requirements such
            as multicast support, very low overhead, and simplicity
            for constrained environments.

            It is used by Open Interconnect Consortium (OIC -
            http://openinterconnect.org/)

            See https://tools.ietf.org/html/rfc7252

config OIC
	bool "OIC"
	default y
	depends on COAP && HAVE_TINYCBOR_SRC
	help
            Implementation of protocol defined by Open Interconnect Consortium
            (OIC - http://openinterconnect.org/)

            It's a common communication framework based on industry standard
            technologies to wirelessly connect and intelligently manage
            the flow of information among devices, regardless of form factor,
            operating system or service provider.

            Both client and server sides are covered by this library.

config HTTP
	bool "HTTP Common"
	default y

config HTTP_CLIENT
	bool "HTTP Client"
	default y
	select HTTP
	depends on NETWORK && FEATURE_HTTP_CLIENT
	help
            Client API for both HTTP and HTTPS.

config HTTP_SERVER
	bool "HTTP Server"
	default y
	select HTTP
	depends on NETWORK && FEATURE_HTTP_SERVER
	help
            Server API for both HTTP and HTTPS.

config HTTP_SERVER_PORT
	depends on HTTP_SERVER
	int "Default server port"
	default "8080" if BUILD_TYPE_DEBUG=y
	default "80"

config MQTT
	bool "MQTT"
	default y
    depends on NETWORK && HAVE_MOSQUITTO
    help
            MQTT is a machine-to-machine (M2M)/"Internet of Things"
            connectivity protocol. It was designed as an extremely
            lightweight publish/subscribe messaging transport. It is useful
            for connections with remote locations where a small code footprint
            is required and/or network bandwidth is at a premium. For example,
            it has been used in sensors communicating to a broker via
            satellite link, over occasional dial-up connections with
            healthcare providers, and in a range of home automation and small
            device scenarios. It is also ideal for mobile applications because
            of its small size, low power usage, minimised data packets, and
            efficient distribution of information to one or many receivers.

            The Soletta implementation of MQTT depends on the mosquitto library
            (http://mosquitto.org/)

config MAVLINK
	bool "Mavlink"
	default y
    depends on LINUX && NETWORK && HAVE_MAVLINK_SRC
    help
            MAVLink or Micro Air Vehicle Link is a protocol for communicating with
            small unmanned vehicle. It is designed as a header-only message marshaling
            library.

config LWM2M
       bool "LWM2M"
       default y
       depends on COAP && HTTP
       help
           LWM2M is a protocol for communication between IoT devices defined by OMA
           (Open Mobile Alliance).
           Both client and server sides are covered by this library.
