#!/usr/bin/env sol-fbp-runner
# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This is a fossball table score tracker.

# declare a new flow node type 'Tracker' that is a fbp file tracker.fbp
DECLARE=Tracker:fbp:tracker.fbp

# and create two nodes using this type, each representing a side of the table
red_tracker(Tracker:win_score=5)
yellow_tracker(Tracker:win_score=5)

# if there is a winner, turn on its LED
red_tracker WON -> IN red_won_output(gtk/led:rgb=255|0|0)
yellow_tracker WON -> IN yellow_won_output(gtk/led:rgb=255|255|0)

# and cheer output
red_tracker WON -> IN0 there_is_a_winner(boolean/or)
yellow_tracker WON -> IN1 there_is_a_winner

there_is_a_winner OUT -> IN cheer_output(gtk/led)

# only for 3 seconds (3000 ms), then reset automatically
there_is_a_winner OUT -> ENABLED cheer_timeout(timer:interval=3000)
cheer_timeout OUT -> RESET red_tracker
cheer_timeout OUT -> RESET yellow_tracker

# allow premature reset, eventually someone will give up ;-)
reset(gtk/pushbutton)
reset OUT -> RESET red_tracker
reset OUT -> RESET yellow_tracker
