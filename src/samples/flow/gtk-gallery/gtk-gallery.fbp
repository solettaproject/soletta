#!/usr/bin/env sol-fbp-runner
# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This file showcases the 'gtk' flow module and its node types. Note
# that the compilation of gtk is conditional and depends on glib main
# loop.

toggle(gtk/toggle) OUT -> IN toggle_output(gtk/label)
toggle OUT -> IN toggle_output2(gtk/led:rgb=255|0|0)

slider(gtk/slider) OUT -> IN slider_output(gtk/label)

spinbutton(gtk/spinbutton:range=step:1|max:INT32_MAX|min:30,value=42) OUT -> IN spinbutton_output(gtk/label)

pwm_editor(gtk/pwm-editor) ENABLED -> ENABLED pwm_viewer(gtk/pwm-viewer:duty_cycle=20,period=50,enabled=true)
pwm_editor DUTY_CYCLE -> DUTY_CYCLE pwm_viewer
pwm_editor PERIOD -> PERIOD pwm_viewer

byte_editor(gtk/byte-editor) OUT -> IN byte_editor_output(gtk/label)

rgb_editor(gtk/rgb-editor) OUT -> IN rgb_editor_output(gtk/led:rgb=0|0|0)

pushbutton(gtk/pushbutton) OUT -> IN pushbutton_output(gtk/led)
pushbutton PRESSED -> IN pushbutton_pressed_output(gtk/label)

timer(timer:interval=3000)
val(int/accumulator:setup_value=min:0|max:15)
timer OUT -> INC val
val OUT -> VALUE led_7seg(gtk/led-7seg)

direction_vector(gtk/direction-vector-editor) OUT -> IN direction_vector_output(gtk/label)

location_editor(gtk/location-editor) OUT -> IN location_output(gtk/label)

float_editor(gtk/float-editor) OUT -> IN float_output(gtk/label)

timestamp_editor(gtk/timestamp-editor) OUT -> IN timestamp(gtk/label)
