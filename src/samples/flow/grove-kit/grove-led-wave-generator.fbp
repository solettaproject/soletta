#!/usr/bin/env sol-fbp-runner

# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# sol-fbp-runner grove-led-generator.fbp

# This is one of the translations of Grove_LED/Grove_LED.ino, from
# https://github.com/Seeed-Studio/Sketchbook_Starter_Kit_for_Arduino.git
# Here we exemplify the usage of the wave generator node type in order
# to do the original file's looping. There's another example doing
# that by means of the accumulator node -- check
# grove-led-accumulator.fbp

# We split the duty_cycle of 2040816 ns (490 Hz for full intensity),
# into 256 slices of 7971, mimicking analogWrite()'s range: 0 to 255

constant_duty_cycle_step(constant/float:value=7971)

timer(timer:interval=5)

# min_ticks: 100 * 5 ms = 500 ms. max_ticks: 20 * 5 ms = 100 ms
wave(float/wave-generator-trapezoidal:min=0,max=255,ticks_inc=255,ticks_dec=255,ticks_at_min=100,ticks_at_max=20,tick_start=100)

timer OUT -> TICK wave

constant_duty_cycle_step OUT -> OPERAND[1] mult(float/multiplication)
wave OUT -> OPERAND[0] mult
mult OUT -> IN conv(converter/float-to-int) OUT -> DUTY_CYCLE led(LED_PWM)
