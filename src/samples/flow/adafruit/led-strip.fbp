#!/usr/bin/env sol-fbp-runner
# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Maps temperature readings (here, fake ones) to led colours on a
# led-strip. The hotter the temperature, the more led will be red. The
# remaining ones will be blue.

# These three fake the output of a temperature sensor
timer(timer)
random(random/int)
temp(int/map:output_range=min:-40|max:100|step:1)

# These are the ones needed to our flow
# led_map maps the expected temperature readings, from -40 to 100, to
# a number up to 31, meaning how many leds will be red.
led_map(int/map:use_input_range=false,input_range=min:-40|max:100,output_range=min:0|max:31|step:1)
less(int/less)
counter(int/accumulator:setup_value=max:31)
blue(converter/empty-to-rgb:output_value=blue:200,green:0,red:0)
red(converter/empty-to-rgb:output_value=red:200,green:0,blue:0)
led_strip(adafruit/led-strip)

temp OUT -> IN led_map
led_map OUT -> INC counter

led_map OUT -> IN[0] less
counter OUT -> IN _(int/filter:min=1,max=31) OUT -> IN[1] less
counter OUT -> PIXEL led_strip

less OUT -> IN _(boolean/filter) TRUE -> IN red OUT -> COLOR led_strip
less OUT -> IN _(boolean/filter) FALSE -> IN blue OUT -> COLOR led_strip

less OUT ->  INC counter

counter OVERFLOW -> FLUSH led_strip
counter OVERFLOW -> RESET counter
