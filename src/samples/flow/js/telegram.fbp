# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This is an example of the "Telegram problem" that receives inputs as
# text, wraps-up the words and send them when the wrap reach a certain
# length.
#
# Wikipedia: https://en.wikipedia.org/wiki/Flow-based_programming#.22Telegram_Problem.22
#
# In this sample we split the words of the text (lorem ipsum) using the custom MySplitter
# node and send each word as a packet to the custom MyTelegram node IN port. When the
# telegram reaches its maximum length (80) it will send the telegram to OUT port.
#
# In order to do so we created two JS node types, MySplitter from splitter.js and MyTelegram
# from telegram.js files.

DECLARE=MyTelegram:js:telegram.js
DECLARE=MySplitter:js:splitter.js

text(constant/string:value="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce ullamcorper nisi ut augue commodo, quis ultricies diam scelerisque. Sed bibendum, eros hendrerit viverra malesuada, velit lectus facilisis urna, in tempus libero mi sed libero. Vestibulum id augue odio. Aenean quis placerat erat. Vestibulum elementum tellus turpis, non sagittis purus pulvinar nec. Nam laoreet tempor enim non interdum. Pellentesque efficitur nunc luctus, lacinia neque nec, congue felis. Vivamus velit odio, pulvinar mollis libero id, condimentum dictum sem. Phasellus ac tellus congue, tempor velit et, dignissim arcu. Sed suscipit ante non metus auctor ultricies. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In in luctus sem. Aliquam non consequat sem.")

_(constant/string:value=" ") OUT -> SEPARATOR splitter(MySplitter)

_(constant/int:value=80) OUT -> LENGTH telegram(MyTelegram)

text OUT -> IN splitter

splitter OUT -> IN telegram OUT -> IN _(console:prefix="telegram: ")
