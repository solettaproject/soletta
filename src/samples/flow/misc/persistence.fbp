#!/usr/bin/env sol-fbp-runner

# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file showcases the persistence/* node types.
# Note that 'name' can contain a fully fledged file path only on 'fs'
# storage. Other storage media, like 'efivars', don't.
# If there was no previous value saved on some persistence file,
# default_value will be sent to OUT port as soon as the node is created.
# timer2 makes int_persist persist (and print) '-1' each five seconds,
# by reseting it to its default.

timer(timer:interval=1000) OUT -> IN toggle(boolean/toggle)
toggle OUT -> IN bool_persist(persistence/boolean:storage="fs",name="/tmp/save_bool") OUT -> IN console_bool(console:prefix="persist bool: ")

wallclock(wallclock/second) OUT -> IN map_byte(converter/int-to-byte)
map_byte OUT -> IN byte_persist(persistence/byte:storage="fs",name="save_byte") OUT -> IN console_byte(console:prefix="persist byte: ")

wallclock OUT -> IN int_persist(persistence/int:storage="fs",name="save_int",default_value=-1) OUT -> IN console_int(console:prefix="persist int: ")

wallclock OUT -> IN map_float(converter/int-to-float)
map_float OUT -> IN float_persist(persistence/float:storage="fs",name="save_float",store_only_val=true) OUT -> IN console_float(console:prefix="persist float: ")

wallclock OUT -> IN map_string(converter/int-to-string)
map_string OUT -> IN string_persist(persistence/string:storage="fs",name="save_string") OUT -> IN console_string(console:prefix="persist string: ")

timer2(timer:interval=5000) OUT -> RESET int_persist
