#!/usr/bin/env sol-fbp-runner
# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This file showcases the persistence/* node types.
# Note that 'fs_dir_path' options is only necessary because chosen storage
# is 'fs'. Other storage media, like 'efivars', don't need 'fs_dir_path'.
# If there was previous value saved on some persistence file, it will be
# sent to OUT port as soon as the node is created.

timer(timer:interval=1000) OUT -> IN toggle(boolean/toggle)
toggle OUT -> IN bool_persist(persistence/boolean:storage="fs",fs_dir_path="/tmp",name="save_bool") OUT -> IN console_bool(console:prefix="persist bool: ")

wallclock(wallclock/second) OUT -> IN map_byte(converter/int-to-byte)
map_byte OUT -> IN byte_persist(persistence/byte:storage="fs",fs_dir_path="/tmp",name="save_byte") OUT -> IN console_byte(console:prefix="persist byte: ")

wallclock OUT -> IN int_persist(persistence/int:storage="fs",fs_dir_path="/tmp",name="save_int") OUT -> IN console_int(console:prefix="persist int: ")

wallclock OUT -> IN map_float(converter/int-to-float)
map_float OUT -> IN float_persist(persistence/float:storage="fs",fs_dir_path="/tmp",name="save_float") OUT -> IN console_float(console:prefix="persist float: ")

wallclock OUT -> IN map_string(converter/int-to-string)
map_string OUT -> IN string_persist(persistence/string:storage="fs",fs_dir_path="/tmp",name="save_string") OUT -> IN console_string(console:prefix="persist string: ")
