#!/usr/bin/env sol-fbp-runner
# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This test will handle command line arguments (usually referred as
# argc (the count - number of arguments) and argv (the vector - list
# of arguments).
#
# It is an example of:
#
#  - app/argc-argv node type to handle command line arguments.
#
#  - anonymous nodes (the '_' character)
#
#  - quit the application (app/quit)
#
#  - integer manipulation (constant, subtraction, equal comparison)
#
#  - looping using the int/accumulator
#
#  - converter (boolean to empty)
#
# Diagram:
#
#                     .-------.                                 .---------.
#                     |       |OUT--------------------------->IN| Console |
#           .------>IN| Args  |                                 `---------'
#           |         |       |                                 .---------.
#           |         |       |ARGC-+------------------------>IN| Console |
#           |         `-------'     |                           `---------'
#           |                       |      .-------------.
#           |                       `-->IN0|             |
#           |         .------.             | Subtraction |OUT-.
#           |         | '1'  |OUT------>IN1|  (ARGC - 1) |    |
#           |         `------'             `-------------'    |
#           |                                                 |
#           |                       .-------------------------'
#           |                       |        .-------.
#           |                       `---->IN0|       |
#           |                                | Limit |OUT--+---.
#           |                       .---->IN1|       |     |   |
#           |                       |        `-------'     |   |
#           `-----------------------+                      |   |
#                     .-------.     |                      |   |
#              .-->INC| Index |OUT--'                      |   |
#              |      `-------'                            |   |
#              |                                           |   |
#              `---------------------------------------.   |   |
#                             .------------------.     |   |   |
#            .->PULSE_IF_FALSE| boolean-to-empty |OUT--'   |   |
#            |                `------------------'         |   |
#            `---------------------------------------------'   |
#                                                              |
#            .-------------------------------------------------'
#            |                .------------------.            .----------.
#            `-->PULSE_IF_TRUE| boolean-to-empty |OUT---->QUIT| app/quit |
#                             `------------------'            `----------'

# Print out number of arguments
Args(app/argc-argv)
Args ARGC -> IN _(console:prefix="number of arguments (includes argv[0]): ")

# Connect Args OUT to console, it will print each element we
# request into IN port as below.
Args OUT -> IN _(console:prefix="argument: ")

## Loop from argv[1] to argv[argc], request that value in IN Args.
# calculates (ARGC - 1)
Args ARGC -> OPERAND[0] Subtraction(int/subtraction)
_(constant/int:value=1) OUT -> OPERAND[1] Subtraction

# Start an accumulator to be our iterator (Index)
Index(int/accumulator:setup_value=min:0|step:1)
# Request Args to output the argument at our Index
Index OUT -> IN Args

# If Index is equal to (ARGC - 1), quit, otherwise increment the accumulator
Subtraction OUT -> IN[0] Limit(int/equal)
Index OUT -> IN[1] Limit
Limit OUT -> PULSE_IF_TRUE _(converter/boolean-to-empty) OUT -> QUIT _(app/quit)
Limit OUT -> PULSE_IF_FALSE _(converter/boolean-to-empty) OUT -> INC Index
