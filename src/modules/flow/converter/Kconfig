config FLOW_NODE_TYPE_CONVERTER
	tristate "Node type: converter"
	default y
	help
		The converter family of nodes will convert Soletta packets
		from one type to another (e.g. boolean to byte). Some of them
		will do more fancy things, like splitting a byte into (boolean)
		individual bits. Others will compose a final packet from
		others, like assembling four bytes into a final integer. You'll
		also find a node that splits an error packet in other twoâ€”its
		integer code and its string message. There are also the nodes
		dealing with JSON data (e.g. one that gets a string packet
		and outputs a JSON array packet, if the string is valid).
		Finally, some of the nodes converting packets to string,
		namely float-to-string and int-to-string, have Python-like
		string formatting capabilities, as in
		https://docs.python.org/3/library/stdtypes.html#str.format.
		This code can be disabled, if not meant to be used, and
		feeding data to those node instances, in this case, will
		always make them output error packets.

config PYTHON_FORMATTING
	bool "Build Python-like string formatting (float-to-string/int-to-string) nodes"
	depends on FLOW_NODE_TYPE_CONVERTER
	default y
	help
		Consider changing this if this functionality won't be used
		and the final Soletta binary is meant for constrained
		systems. If disabled, the format of those nodes
		will be the pristine printf ones and only the value (not the
		range) of the inputs will be formatted.
