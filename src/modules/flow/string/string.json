{
  "$schema": "http://solettaproject.github.io/soletta/schemas/node-type-genspec.schema",
  "name": "string",
  "meta": {
    "author": "Intel Corporation",
    "license": "BSD 3-Clause",
    "version": "1"
  },
  "types": [
    {
      "category": "string",
      "description": "Compare two strings",
      "in_ports": [
        {
          "data_type": "string",
          "description": "Two strings to be compared. Indexed from 0 to 1.",
          "methods": {
            "process": "string_compare"
          },
          "name": "IN[2]"
        }
      ],
      "methods": {
        "close": "string_close",
        "open": "string_compare_open"
      },
      "name": "string/compare",
      "options": {
        "members": [
          {
            "data_type": "int",
            "default": 0,
            "description": "Amount of bytes to be compared between strings. If zero, the whole strings will be compared.",
            "name": "bytes"
          },
          {
            "data_type": "boolean",
            "default": false,
            "description": "Ignore case when comparing strings.",
            "name": "ignore_case"
          }
        ],
        "version": 1
      },
      "out_ports": [
        {
          "data_type": "int",
          "description": "It returns an integer less than, equal to, or greater than zero if string received on IN[0] is found to be less than, to match, or be greater than string on IN[1].",
          "name": "OUT"
        },
        {
          "data_type": "boolean",
          "description": "TRUE if the string received on IN[0] is the same as the string on IN[1].",
          "name": "EQUAL"
        }
      ],
      "private_data_type": "string_compare_data",
      "url": "http://solettaproject.org/doc/latest/node_types/string/compare.html"
    },
    {
      "category": "string",
      "description": "Concatenate two strings",
      "in_ports": [
        {
          "data_type": "string",
          "description": "Two strings to be concatenated. Indexed from 0 to 1.",
          "methods": {
            "process": "string_concat"
          },
          "name": "IN[2]"
        }
      ],
      "methods": {
        "close": "string_concatenate_close",
        "open": "string_concatenate_open"
      },
      "options": {
        "members": [
          {
            "data_type": "int",
            "default": 0,
            "description": "Amount of bytes to be copied from string received on IN[1]. If zero, the whole string will be concatenated to the string received on IN[0]",
            "name": "bytes"
          },
          {
            "data_type": "string",
            "default": null,
            "description": "Separator string to be used between the two concatenated strings. It's set to null by default (no separator).",
            "name": "separator"
          }
        ],
        "version": 1
      },
      "name": "string/concatenate",
      "out_ports": [
        {
          "data_type": "string",
          "description": "String IN[0] concatenated to string IN[1].",
          "name": "OUT"
        }
      ],
      "private_data_type": "string_concatenate_data",
      "url": "http://solettaproject.org/doc/latest/node_types/string/concatenate.html"
    },
    {
      "category": "string",
      "description": "Calculate the length of a string",
      "in_ports": [
        {
          "data_type": "string",
          "description": "String to be measured.",
          "methods": {
            "process": "string_length_process"
          },
          "name": "IN"
        }
      ],
      "methods": {
        "open": "string_length_open"
      },
      "name": "string/length",
      "options": {
        "members": [
          {
            "data_type": "int",
            "default": 0,
            "description": "Maximum length to be checked. If a string is greater than that, maxlen value will be sent. If zero, no limit is applied.",
            "name": "maxlen"
          }
        ],
        "version": 1
      },
      "out_ports": [
        {
          "data_type": "int",
          "description": "Send the string size, the number of bytes excluding terminating null byte. If maxlen is provided, it'll be at most this value.",
          "name": "OUT"
        }
      ],
      "private_data_type": "string_length_data",
      "url": "http://solettaproject.org/doc/latest/node_types/string/length.html"
    },
    {
      "category": "string",
      "description": "Split a string given a separator.",
      "in_ports": [
        {
          "data_type": "string",
          "description": "String to be split.",
          "methods": {
            "process": "string_split"
          },
          "name": "IN"
        },
        {
          "data_type": "string",
          "description": "String received on 'IN' port will be split using these delimiter chars.",
          "methods": {
            "process": "set_string_separator"
          },
          "name": "SEPARATOR"
        },
        {
          "data_type": "int",
          "description": "A string can be split in many substrings. This value defines which substring should be sent. It must be non-negative.",
          "methods": {
            "process": "set_string_index"
          },
          "name": "INDEX"
        },
        {
          "data_type": "int",
          "description": "A string can be split in many substrings. This value defines the maximum number of splits (separated by the separator option) to generate, and must be non-negative.",
          "methods": {
            "process": "set_max_split"
          },
          "name": "MAX_SPLIT"
        }
      ],
      "methods": {
        "close": "string_split_close",
        "open": "string_split_open"
      },
      "name": "string/split",
      "options": {
        "members": [
          {
            "data_type": "int",
            "default": 0,
            "description": "A string can be split in many substrings. This value defines which substring should be sent. It must be non-negative. It can be overriden by values received on 'INDEX' port.",
            "name": "index"
          },
          {
            "data_type": "int",
            "default": 0,
            "description": "A string can be split in many substrings. This value defines the maximum number of splits (separated by the separator option) to generate, and must be non-negative. The default value of zero means to generate all substrings between the given separator. This option can be overriden by values received on the 'MAX_SPLIT' port.",
            "name": "max_split"
          },
          {
            "data_type": "string",
            "default": " ",
            "description": "String received on 'IN' port will be split using these delimiters chars. It can be overriden by values received on 'SEPARATOR' port.",
            "name": "separator"
          }
        ],
        "version": 1
      },
      "out_ports": [
        {
          "data_type": "int",
          "description": "Number of generated substrings.",
          "name": "LENGTH"
        },
        {
          "data_type": "string",
          "description": "Substring given a separator and an index.",
          "name": "OUT"
        }
      ],
      "private_data_type": "string_split_data",
      "url": "http://solettaproject.org/doc/latest/node_types/string/split.html"
    },
    {
      "category": "string",
      "description": "Given an input string, output a copy with all original characters in lower case.",
      "in_ports": [
        {
          "data_type": "string",
          "description": "String to be output in lowercase",
          "methods": {
            "process": "string_lowercase"
          },
          "name": "IN"
        }
      ],
      "name": "string/lowercase",
      "out_ports": [
        {
          "data_type": "string",
          "description": "The original input string now in lowercase characters",
          "name": "OUT"
        }
      ],
      "url": "http://solettaproject.org/doc/latest/node_types/string/lowercase.html"
    },
    {
      "category": "string",
      "description": "Given an input string, output a copy with all original characters in upper case.",
      "in_ports": [
        {
          "data_type": "string",
          "description": "String to be output in uppercase",
          "methods": {
            "process": "string_uppercase"
          },
          "name": "IN"
        }
      ],
      "name": "string/uppercase",
      "out_ports": [
        {
          "data_type": "string",
          "description": "The original input string now in uppercase characters",
          "name": "OUT"
        }
      ],
      "url": "http://solettaproject.org/doc/latest/node_types/string/uppercase.html"
    },
    {
      "category": "string",
      "description": "Replace a pattern in a string for another.",
      "in_ports": [
        {
          "data_type": "string",
          "description": "String to be replaced.",
          "methods": {
            "process": "string_replace_process"
          },
          "name": "IN"
        },
        {
          "data_type": "string",
          "description": "The string received on the 'IN' port will have substrings defined by this port replaced by the ones defined in the 'TO' port.",
          "methods": {
            "process": "set_replace_from"
          },
          "name": "FROM"
        },
        {
          "data_type": "string",
          "description": "The string received on the 'IN' port will have substrings defined by the 'FROM' port replaced by the ones defined in this port.",
          "methods": {
            "process": "set_replace_to"
          },
          "name": "TO"
        },
        {
          "data_type": "int",
          "description": "A string can have a substring replaced in many points. This value defines the maximum number of replacements to attempt, and must be non-negative.",
          "methods": {
            "process": "set_max_replace"
          },
          "name": "MAX_REPLACE"
        }
      ],
      "methods": {
        "close": "string_replace_close",
        "open": "string_replace_open"
      },
      "name": "string/replace",
      "options": {
        "members": [
          {
            "data_type": "int",
            "default": 0,
            "description": "A string can have a substring replaced in many points. This value defines the maximum number of replacements to attempt, and must be non-negative.. The default value of zero means to replace all possible substrings. This option can be overriden by values received on the 'MAX_REPLACE' port.",
            "name": "max_replace"
          },
          {
            "data_type": "string",
            "default": "",
            "description": "The string received on the 'IN' port will have substrings defined by this option replaced by the ones defined by the 'to_string' one. It can be overriden by values received on 'FROM' port.",
            "name": "from_string"
          },
          {
            "data_type": "string",
            "default": "",
            "description": "The string received on the 'IN' port will have substrings defined by the 'from_string' option replaced by the ones defined by this one. It can be overriden by values received on 'TO' port.",
            "name": "to_string"
          }

        ],
        "version": 1
      },
      "out_ports": [
        {
          "data_type": "string",
          "description": "The original string coming in the 'IN' port with the due replacements made.",
          "name": "OUT"
        }
      ],
      "private_data_type": "string_replace_data",
      "url": "http://solettaproject.org/doc/latest/node_types/string/replace.html"
    }
  ]
}
