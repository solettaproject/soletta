{
  "$schema": "http://solettaproject.github.io/soletta/schemas/node-type-genspec.schema",
  "name": "regexp",
  "meta": {
    "author": "Intel Corporation",
    "license": "Apache-2.0",
    "version": "1"
  },
  "types": [
    {
      "category": "string",
      "description": "Search a given regular expression pattern on a given string. This node expects the same syntax and semantics as Perl 5 on regular expressions. When dealing the UTF-8 characters, remember to use the 'p{}' family of escape sequences (Unicode character properties).",
      "in_ports": [
        {
          "data_type": "string",
          "description": "String to be searched.",
          "methods": {
            "process": "string_regexp_search"
          },
          "name": "IN"
        },
        {
          "data_type": "string",
          "description": "Regular expression pattern to search the string received on 'IN' port with.",
          "methods": {
            "process": "set_string_regexp_pattern"
          },
          "name": "REGEXP"
        },
        {
          "data_type": "int",
          "description": "This value defines which substring match (by index, starting from 0) inside the one that was fed to the 'IN' port should be output in the 'OUT' port. It must be non-negative. The first substring will always identify the portion of the subject string matched by the entire pattern. The next one will be the first capturing subpattern, and so on.",
          "methods": {
            "process": "set_string_regexp_index"
          },
          "name": "INDEX"
        },
        {
          "data_type": "int",
          "description": "The regular expression matching against the input string can result in various substring matches. This value defines the maximum number of them to generate and make available for selection by the 'INDEX' port. It must be non-negative. The value of zero will be interpreted as to generate all possible matches.",
          "methods": {
            "process": "set_string_regexp_max_match"
          },
          "name": "MAX_REGEXP_SEARCH"
        }
      ],
      "methods": {
        "close": "string_regexp_search_close",
        "open": "string_regexp_search_open"
      },
      "name": "regexp/search",
      "aliases": [
          "string/regexp-search"
      ],
      "options": {
        "members": [
          {
            "data_type": "uint",
            "default": 0,
            "description": "This value defines which substring match (by index, starting from 0) inside the one that was fed to the 'IN' port should be output in the 'OUT' port. It must be non-negative. It can be overriden by values received on 'INDEX' port.",
            "name": "index"
          },
          {
            "data_type": "uint",
            "default": 0,
            "description": "The regular expression matching against the input string can result in various substring matches. This value defines the maximum number of them to generate and make available for selection by the 'INDEX' port. This option can be overriden by values received on the 'MAX_REGEXP_SEARCH' port. The value of zero (default one) will be interpreted as to generate all possible matches.",
            "name": "max_regexp_search"
          },
          {
            "data_type": "string",
            "description": "Regular expression pattern to search the string received on 'IN' port with. It can be overriden by values received on 'REGEXP' port.",
            "name": "regexp"
          }
        ],
        "version": 1
      },
      "out_ports": [
        {
          "data_type": "int",
          "description": "Number of regular expression match substrings. The first substring will always identify the portion of the subject string matched by the entire pattern. The next one will be the first capturing subpattern, and so on.",
          "name": "LENGTH"
        },
        {
          "data_type": "string",
          "description": "Outputs the regular expression match substring at the selected index. With regard to indices, the first substring (index 0) will always identify the portion of the subject string matched by the entire pattern. The next one will be the first capturing subpattern, and so on.",
          "name": "OUT"
        }
      ],
      "private_data_type": "string_regexp_search_data",
      "url": "http://solettaproject.org/doc/latest/node_types/regexp/search.html"
    },
    {
      "category": "string",
      "description": "Replace a regular expression pattern in a string for another. This node expects the same syntax and semantics as Perl 5 on regular expressions. When dealing the UTF-8 characters, remember to use the 'p{}' family of escape sequences (Unicode character properties).",
      "in_ports": [
        {
          "data_type": "string",
          "description": "String to be replaced.",
          "methods": {
            "process": "string_regexp_replace"
          },
          "name": "IN"
        },
        {
          "data_type": "string",
          "description": "Regular expression pattern to match the string received on 'IN' port with. If groups are used, they may be referred back on the string coming in the 'TO' port.",
          "methods": {
            "process": "set_string_regexp_replace_pattern"
          },
          "name": "REGEXP"
        },
        {
          "data_type": "string",
          "description": "String substitution for the pattern match (may be a regular expression as well). Groups present on the string provided to the port 'REGEXP' may be referred here on the substitution.",
          "methods": {
            "process": "set_string_regexp_replace_to"
          },
          "name": "TO"
        },
        {
          "data_type": "int",
          "description": "The regular expression matching against the input string can result in various substring matches. This value defines the maximum number of them to exchange for the string given in the 'TO' port. It must be non-negative. The value of zero will be interpreted as to replace all possible matches.",
          "methods": {
            "process": "set_string_regexp_replace_max_match"
          },
          "name": "MAX_REGEXP_REPLACE"
        }
      ],
      "methods": {
        "close": "string_regexp_replace_close",
        "open": "string_regexp_replace_open"
      },
      "name": "regexp/replace",
      "aliases": [
          "string/regexp-replace"
      ],
      "options": {
        "members": [
          {
            "data_type": "uint",
            "default": 0,
            "description": "The regular expression matching against the input string can result in various substring matches. This value defines the maximum number of them to replace for the string given in the 'to' option. This option can be overriden by values received on the 'MAX_REGEXP_REPLACE' port. The value of zero (default one) will be interpreted as to replace all possible matches.",
            "name": "max_regexp_replace"
          },
          {
            "data_type": "string",
            "description": "Regular expression pattern to match the string received on 'IN' port with. If groups are used, they may be referred back on the string coming in the 'TO' port. It must not be an empty string. It may be overriden by values received on 'REGEXP' port.",
            "name": "regexp"
          },
          {
            "data_type": "string",
            "description": "String substitution for the pattern match. Groups present on the string provided to the port 'REGEXP' may be referred here on the substitution (e.g. \\\\g1 or \\\\1 for the first matching group). It may be an empty string. It can be overriden by values received on 'TO' port.",
            "name": "to"
          },
          {
            "data_type": "boolean",
            "default": true,
            "description": "Whether to only forward the input string as is to the output port when no matches occur (true) or to generate error packets (false)",
            "name": "forward_on_no_match"
          }
        ],
        "version": 1
      },
      "out_ports": [
        {
          "data_type": "string",
          "description": "The original string coming in the 'IN' port with the due replacements made.",
          "name": "OUT"
        }
      ],
      "private_data_type": "string_regexp_replace_data",
      "url": "http://solettaproject.org/doc/latest/node_types/regexp/replace.html"
    }
  ]
}
