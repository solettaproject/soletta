#!/usr/bin/env sol-fbp-runner

# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

increase_button(keyboard/boolean:binary_code=106)
decrease_button(keyboard/boolean:binary_code=107)
state_button(keyboard/boolean:binary_code=97)
quit_button(keyboard/boolean:binary_code=113)

_(constant/string:value="Press 'a' to change state, 'j' to increase power and 'k' to decrease it, 'q' to quit.") OUT -> IN _(console:prefix="Hint: ")

quit_button OUT -> QUIT _(app/quit)

cmdline_arguments(app/argc-argv)
cmdline_arguments ERROR -> IN cmdline_usage(converter/empty-to-string:output_value="Missing device ID in the command line. Example: 2f3089a1dbfb43d38cab64383bdf9380") OUT -> IN _(console:prefix="ERROR: ")
cmdline_usage OUT -> IN _(converter/empty-to-int:output_value=1) OUT -> CODE _(app/quit)
_(constant/int:value=1) OUT -> IN cmdline_arguments

power_value(int/accumulator:setup_value=min:0|max:100|step:1,initial_value=50,send_initial_packet=false)
state_value_as_int(int/accumulator:setup_value=min:0|max:1|step:1,send_initial_packet=false)

increase_button OUT -> IN _(boolean/filter) TRUE -> INC power_value
decrease_button OUT -> IN _(boolean/filter) TRUE -> DEC power_value

power_value OUT -> IN _(console:prefix="Power value changed: ")

oic(oic/client-light)
cmdline_arguments OUT -> DEVICE_ID oic

oic POWER -> SET power_value
power_value OUT -> POWER oic

state_button OUT -> IN _(boolean/filter) TRUE -> INC state_value_as_int

state_value_from_boolean(converter/boolean-to-int)
state_value(converter/int-to-boolean)

oic STATE -> IN state_value_from_boolean
state_value OUT -> STATE oic

state_value_from_boolean OUT -> SET state_value_as_int
state_value_as_int OUT -> IN state_value

state_value OUT -> IN _(console:prefix="State changed: ")

# This prints server current state. It is not updated
# when this client updates server though: only if server is changed
# elsewhere `oic` node will send output packets.
oic POWER -> IN _(console:prefix="Server power level is: ")
oic STATE -> IN _(console:prefix="Server state is: ")
